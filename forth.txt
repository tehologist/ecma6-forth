create _load   4 , primitive : @ _load ; 
create _store  5 , primitive : ! _store ;
create _add    6 , primitive : + _add ; 
create _sub    7 , primitive : - _sub ;
create _mul    8 , primitive : * _mul ;
create _div    9 , primitive : / _div ;
create _mod   10 , primitive : % _mod ;
create _and   11 , primitive : & _and ;
create _or    12 , primitive : | _or ;
create _not   13 , primitive : ~ _not ;
create _dup   14 , primitive : dup _dup ;
create _drop  15 , primitive : drop _drop ;
create _swap  16 , primitive : swap _swap ;
create _over  17 , primitive : over _over ;
create _gt    22 , primitive : > _gt ;
create _eq    23 , primitive : = _eq ;
create _lt    24 , primitive : < _lt ;
create _putn  25 , primitive : . _putn ; 
create _jz    20 , primitive
create _jmp   21 , primitive 
create >r     18 , primitive
create r>     19 , primitive
create return  3 , primitive 
create lit     1 , primitive
create put_pixel     26 , primitive
create draw_screen   27 , primitive
create read_key      30 , primitive 
create _clear_screen 28 , primitive : clear_screen _clear_screen ;
create _draw_count   29 , primitive : draw_count _draw_count ;
create _set_waveform 31 , primitive 
create _start_sound  32 , primitive
create _lshift 33 , primitive : << _lshift ;
create _rshift 34 , primitive : >> _rshift ;
: clear _clear_screen draw_screen ;

: 2dup _over _over ; 
: 2drop _drop _drop ;

: cp 2 ; 
: here cp _load ;
: cell 1 ;
: cell+ cell _add ;
: cell- cell _sub ;
: allot cp _load _add cp _store ; 
: , here cell allot ! ; 
: compile r> cell+ _dup _load , >r ; 
: if compile _jz here 0 , ; immediate
: else compile _jmp here 0 , _swap here _swap _store ; immediate
: then here _swap _store ; immediate 
: begin here ; immediate 
: again compile _jmp , ; immediate 
: until compile _jz , ; immediate
: while compile _jz here 0 , swap ; immediate
: repeat compile _jmp , here swap ! ; immediate
: literal compile lit , ; immediate
: test_loop begin 1 _sub _dup while _dup . repeat _drop ; 
: twelve [ 2 6 * ] literal ;

: screen_x [ 640 ] literal ;
: screen_y [ 400 ] literal ;

: screen_location screen_x _mul _add 4 _mul ;

create color 0 , 
: white H# FFFFFF ;  
: black H# 000000 ;
: grey  H# 808080 ;  
: red   H# 800000 ;  
: green H# 008000 ;  
: blue  H# 000080 ;
blue color !


// Plot pixel ( location | ) 
: plot_pixel color _load _swap put_pixel ;

// Draw line ( y_position | )	
: draw_line 
    screen_x _swap 
    begin _over 
    while 
        _over _over screen_location plot_pixel 
        _swap 1 _sub _swap  
    repeat screen_location plot_pixel  draw_screen ;
: draw draw_screen ; 
: anim begin _dup while _dup draw_line 1 _sub repeat draw_line  ; 

create colors white , black , grey , red , green , blue , 
: get_key begin draw_screen read_key until . ;
: draw_color begin draw_screen read_key if 6 _mod colors _add _load color _store screen_y anim then again ;

// Should ignore this line
 
: one_second begin draw_screen _draw_count 60 % 0 = until ; 
: two_second begin draw_screen _draw_count 120 % 0 = until ;
: pause begin draw_screen _draw_count 30 % 0 = until ; 

: sprite_x 8 ;
: sprite_y 8 ;

: columns [ screen_x sprite_x / ] literal ;
: rows    [ screen_y sprite_y / ] literal ;

: row_pos screen_x _mul sprite_y _mul ; 
: col_pos sprite_x _mul ;  

: start_pixel row_pos swap col_pos _add 4 _mul ; 

: even 2 % 0 = ; 
: nip swap drop ; 
: next_color 1 _add ;
: get_sprite_color _dup _load color _store next_color ;
: next_pixel swap 4 _add swap ; 
: plot_sprite get_sprite_color over plot_pixel next_pixel ;  
: next_row swap [ screen_x 4 * ] literal _add swap ;
: draw_columns 0 >r _over _swap begin plot_sprite r> 1 _add _dup >r sprite_x = until r> _drop nip next_row ; 

: draw_rows 0 >r begin draw_columns r> 1 _add dup >r sprite_y = until r> drop ; 

create sprite1 
black , red   , blue  , black , red  , blue , red   , blue  , 
red   , blue  , black , red   , blue , red  , blue  , black ,
blue  , black , red   , blue  , red  , blue , black , red   , 
red   , blue  , black , red   , blue , red  , blue  , black ,
black , red   , blue  , black , red  , blue , red   , blue  , 
blue  , black , red   , blue  , red  , blue , black , red   , 
black , red   , blue  , black , red  , blue , red   , blue  , 
red   , blue  , black , red   , blue , red  , blue  , black ,

: draw_tile >r start_pixel r> draw_rows draw_screen drop drop ; 
: draw_row 0 0 sprite1 draw_tile ; 
: test 44000 0 _set_waveform 50 500 _start_sound ; 
